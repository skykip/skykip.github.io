{"meta":{"title":"skykip's Wiki","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"标签","date":"2022-04-11T03:22:04.827Z","updated":"2022-04-11T03:22:04.827Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"About","date":"2022-04-11T04:33:35.851Z","updated":"2022-04-11T04:33:35.851Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"test"},{"title":"Categories","date":"2022-04-10T12:17:42.880Z","updated":"2022-04-10T12:17:42.880Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Wikitten主题-中文文档","slug":"Wikitten主题中文文档","date":"2022-04-11T07:57:19.692Z","updated":"2022-04-11T08:12:08.242Z","comments":true,"path":"2022/04/11/Wikitten主题中文文档/","link":"","permalink":"http://example.com/2022/04/11/Wikitten%E4%B8%BB%E9%A2%98%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/","excerpt":"","text":"English Page 一个仿 Wikitten 样式的 Hexo 个人 wiki 系统主题。 &gt;预览一些特性： 适用于个人 wiki 知识管理 简洁，双栏，分类 将知识多级分类整理，侧边分级展开，为思维跳转设计 根据文件路径自动为文章添加分类 安装说明hexo-theme-Wikitten 核心功能代码基于 icarus，所以你可以在 icarus wiki 阅读基础功能文档。 安装注意：本主题需要 Hexo v3.6 及以上版本。 进入你的 hexo 站点文件夹，克隆 Wikitten 主题到 themes/ 路径下 12$ cd your-hexo-directory$ git clone https://github.com/zthxxx/hexo-theme-Wikitten.git themes/Wikitten 覆盖站点目录中一些默认页面模板 12$ cp -rf themes/Wikitten/_source/* source/$ cp -rf themes/Wikitten/_scaffolds/* scaffolds/ 重命名主题中的 _config.yml.example 到 _config.yml，然后可以使用配置文件配置主题 123$ cp -f themes/Wikitten/_config.yml.example themes/Wikitten/_config.yml# 编辑配置文件，定制你的配置项$ vim themes/Wikitten/_config.yml 大部分的配置项都和 icarus 主题中的配置项一样，你可以首先去阅读一下 icraus 的文档。 一些你可以开箱即用的推荐配置见下面的文档：#Configuration 需要安装的插件写在主题的 package.json 文件中 这里列出了这些插件的功能作用： 12345hexo-autonofollow // 打开非本站链接时自动开启新标签页hexo-directory-category // 根据文章文件目录自动为文章添加分类hexo-generator-feed // 生成 RSS 源hexo-generator-json-content // 生成全站文章 json 内容，用于全文搜索hexo-generator-sitemap // 生成全站站点地图 sitemap 你可以将这些插件合并到站点的 package.json 文件中通过 npm install 一次安装， 或者在站点目录下，你可以通过以下命令安装他们： 1$ npm i -S hexo-autonofollow hexo-directory-category hexo-generator-feed hexo-generator-json-content hexo-generator-sitemap 配置mathjax渲染（可选）： 如果你在博客中需要撰写数学公式，推荐进行以下配置： 首先安装pandoc，同时在hexo站点下修改渲染引擎： 12$ npm un hexo-renderer-marked --save$ npm i hexo-rendere-pandoc --save # or hexo-renderer-krammed 然后将以下配置加到站点_config.yml文件中： 123math: enable: true engine: mathjax 启用修改站点 _config.yml 文件中的 theme 选项为 **Wikitten**。 更新12$ cd themes/Wikitten$ git pull origin master 配置说明在站点配置文件 _config.yml 中， 推荐配置为： 123456789101112131415161718192021222324252627282930313233343536373839404142434445# Hexo Configuration# URLpermalink: wiki/:title/# Directoryskip_render: - README.md - &#x27;_posts/**/embed_page/**&#x27;# Writingnew_post_name: :title.md # File name of new posts## Markdown## https://github.com/hexojs/hexo-renderer-markedmarked: gfm: true ## Plugins: https://hexo.io/plugins/### JsonContentjsonContent: meta: false pages: title: true date: true path: true text: true posts: title: true date: true path: true text: true tags: true categories: true ignore: - 404.html ### Creat sitemapsitemap: path: sitemap.xml### Adds nofollow attribute to all external links in your hexo blog posts automatically.nofollow: enable: true exclude: - &lt;your site url domain&gt; # eg: zthxxx.me 在主题配置文件 Wikitten/_config.yml 中，你能阅读到各个选项更多的细节配置。 在开始之前，首先请将主题配置文件示例中「我」的信息修改为「你」自己的信息，其中包括 profile social_links history_control等配置项。 profile、comment、Share 和 miscellaneous 项都是 默认关闭的！（你任然可以打开那些选项，只是不推荐这样做。） 其他的 推荐设置为： 12345678910111213141516171819202122# Customizecustomize: # 首先修改这项里面的信息为你自己的各项信息 sidebar: left # 侧边栏的所在位置，默认左边 category_perExpand: false # 侧边栏里的各个分类是否默认全部展开 default_index_file: index.md # 是否指定一篇文章作为首页来代替默认的多篇文章的首页，没有此项的话就会显示默认的按时间顺序排列的文章 # Widgetswidgets: # 挂件，默认指开启了分类这一栏 - category # - recent_posts # - archive # - tag # - tagcloud # - links # History version history_control: # 启用这一项使得 wiki 能有历史版本的功能（查看源码、在线编辑、对比历史变动） enable: true server_link: https://github.com # 版本控制服务器，推荐使用 GitHub https://github.com user: &lt;your GitHub name&gt; repertory: &lt;your repertory name of this wiki source code&gt; branch: &lt;branch name of this wiki site source code&gt; 版权协议MIT LICENSE","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"搭建","slug":"搭建","permalink":"http://example.com/tags/%E6%90%AD%E5%BB%BA/"},{"name":"主题","slug":"主题","permalink":"http://example.com/tags/%E4%B8%BB%E9%A2%98/"}]},{"title":"welcome skykip's Wiki Site","slug":"welcome","date":"2022-04-11T04:49:06.172Z","updated":"2022-04-11T04:49:57.785Z","comments":true,"path":"2022/04/11/welcome/","link":"","permalink":"http://example.com/2022/04/11/welcome/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"使用 Hexo+GitHub 搭建个人博客","slug":"hello-world","date":"2022-04-10T11:18:49.161Z","updated":"2022-04-11T12:15:27.187Z","comments":true,"path":"2022/04/10/hello-world/","link":"","permalink":"http://example.com/2022/04/10/hello-world/","excerpt":"","text":"本文主要使用Hexo与Github进行个人blog的搭建Hexo官网：HexoGithub官网：Github 环境介绍博主的本地环境为：MacBook Air M1，Macos 11.2.2，Homebrew 3.4.5 开始搭建1.安装 node与npm12345678$ brew install node$ brew install npm$ node$ Welcome to Node.js v17.8.0.$ npm -version$ 8.6.0 2.安装Hexo12345# 使用npm安装Hexo$ npm install hexo-cli -g# 初始化Hexo blog$ hexo init blog 本地blog初始化成功，本地路径为/Users/username/blog 3.Hexo主题选择Hexo可在官网自由选择官网主题：HexoTheme进入主题页面，点击图片可对主题进行预览，点击蓝色主题名称可进入相应的主题Github主页 （1）主题下载123456#从终端进入blog项目中$ cd blog#使用git克隆相应主题到blog中#格式：git clone [url] themes/xxx#本博客采用Wikitten主题进行构建$ git clone https://github.com/zthxxx/hexo-theme-Wikitten themes/Wikitten （2）主题配置修改blog中的_config.yml文件 1theme: Wikitten 具体配置移步到Wikitten主题-中文文档 4.Github配置本地blog已经搭建完成，通过Github相应配置，即可将其部署到Github上。 （1）注册Github账号Github-signup （2）Github SSH免密码配置1）设置user.name和user.email配置信息： 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 2）查看本机是否存在.ssh文件 1234$ cd ~/.ssh$ lsauthorized_keys id_rsa known_hostsconfig id_rsa.pub 配置SHH免密码登录需要寻找一对id_rsa命名的文件，其中带.pub 扩展名的文件是公钥，另一个则为私钥。如果没有找不到这样的文件（或者根本就没有.ssh目录）可以通过ssh-keygen程序来创建它们。 12#邮箱填Github的注册邮箱$ ssh-keygen -t rsa -C &quot;xx@xx.com&quot; ssh-keygen会确认密钥的存储位置和文件名（默认是 .ssh&#x2F;id_rsa）,然后他会要求你输入两次密钥口令，留空即可。所以一般选用默认，全部回车即可。 3）Github配置登陆到GitHub，右上角小头像-&gt;Setting-&gt;SSH and GPG keys中，点击new SSH key。Title：可以随便填写，但最好起的名字能让自己知道这个公钥是哪个设备的。Key：将上面生成的.pub文件中的所有内容复制到这里。点击下面的Add SSH key即可。就可实现SSH免密码访问。 （3）Github 远程仓库配置1）在github上创建一个仓库username.github.io username为自己的github用户名 2）安装hexo部署插件 1$ npm install hexo-deployer-git --save 3）配置Blog的_comfig.yml文件 12345# 配置hexo把blog部署到github仓库里deploy: type: git repository: git@github.com:username/username.github.io.git branch: master 4）使用Hexo d即可将Blog部署到Github上 5.Hexo常用命令（三连）1234567#打开 Git bash#清除生成的网页文件hexo clean#生成网页文件hexo g#上传网页文件到 Github pagehexo d 6.快捷命令通过使用alias，触发一些命令的集合在 ~/.bashrc 文件中添加 123alias hs=&#x27;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#x27; #启动本地服务alias hd=&#x27;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push -f&#x27; #部署博客source ~/.bashrc #刷新配置文件","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"搭建","slug":"搭建","permalink":"http://example.com/tags/%E6%90%AD%E5%BB%BA/"}]}],"categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"搭建","slug":"搭建","permalink":"http://example.com/tags/%E6%90%AD%E5%BB%BA/"},{"name":"主题","slug":"主题","permalink":"http://example.com/tags/%E4%B8%BB%E9%A2%98/"}]}